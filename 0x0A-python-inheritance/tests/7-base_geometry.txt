>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

Tests:
	>>> bg = BaseGeometry()

	>>> bg.integer_validator("my_int", 12)

	>>> bg.integer_validator("width", 89)

	>>> bg.integer_validator("name", "John")
	Traceback (most recent call last):
		...
	TypeError: name must be an integer

	>>> bg.integer_validator("age", 0)
	Traceback (most recent call last):
	...
	ValueError: age must be greater than 0

	>>> bg.integer_validator("age", 'a')
	Traceback (most recent call last):
	...
	TypeError: age must be an integer

	>>> bg.integer_validator("age", 0, 1)
	Traceback (most recent call last):
	...
	TypeError: integer_validator() takes 3 positional arguments but 4 were given

	>>> bg.integer_validator()
	Traceback (most recent call last):
	...
	TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

	>>> bg.integer_validator("age", -1)
	Traceback (most recent call last):
	...
	ValueError: age must be greater than 0

	>>> bg.integer_validator("name", "John", "SNOW")
	Traceback (most recent call last):
	...
	TypeError: integer_validator() takes 3 positional arguments but 4 were given

	>>> bg.integer_validator("name", 1)

	>>> bg.area()
	Traceback (most recent call last):
	...
	Exception: area() is not implemented
	
	>>> bg.integer_validator("my_int", True)
	Traceback (most recent call last):
		...
	TypeError: my_int must be an integer

	>>> bg.integer_validator("my_int")
	Traceback (most recent call last):
	...
	TypeError: integer_validator() missing 1 required positional argument: 'value'
	
	>>> bg.integer_validator(78, 21)

	>>> bg.integer_validator("name", 1.2)
	Traceback (most recent call last):
	...
	TypeError: name must be an integer



